#!/bin/bash

# Script de inicializa√ß√£o do Redpanda para produ√ß√£o
set -e

echo "üöÄ Iniciando Redpanda em modo produ√ß√£o..."

# Aguardar configura√ß√µes de rede
sleep 5

# Configurar vari√°veis de ambiente
export REDPANDA_RPC_SERVER="${REDPANDA_RPC_SERVER:-0.0.0.0:33145}"
export REDPANDA_KAFKA_API="${REDPANDA_KAFKA_API:-0.0.0.0:9092}"
export REDPANDA_PANDAPROXY_API="${REDPANDA_PANDAPROXY_API:-0.0.0.0:8082}"
export REDPANDA_SCHEMA_REGISTRY_API="${REDPANDA_SCHEMA_REGISTRY_API:-0.0.0.0:8081}"

# Configurar endere√ßos de an√∫ncio
export REDPANDA_ADVERTISE_RPC_SERVER="${REDPANDA_ADVERTISE_RPC_SERVER:-redpanda:33145}"
export REDPANDA_ADVERTISE_KAFKA_API="${REDPANDA_ADVERTISE_KAFKA_API:-redpanda:9092}"
export REDPANDA_ADVERTISE_PANDAPROXY_API="${REDPANDA_ADVERTISE_PANDAPROXY_API:-redpanda:8082}"
export REDPANDA_ADVERTISE_SCHEMA_REGISTRY_API="${REDPANDA_ADVERTISE_SCHEMA_REGISTRY_API:-redpanda:8081}"

# Configurar performance
export REDPANDA_SMP="${REDPANDA_SMP:-2}"
export REDPANDA_MEMORY="${REDPANDA_MEMORY:-2G}"
export REDPANDA_RESERVE_MEMORY="${REDPANDA_RESERVE_MEMORY:-0M}"
export REDPANDA_OVERPROVISIONED="${REDPANDA_OVERPROVISIONED:-false}"

# Configurar logs
export REDPANDA_LOG_LEVEL="${REDPANDA_LOG_LEVEL:-info}"

echo "üìã Configura√ß√µes:"
echo "  - RPC Server: $REDPANDA_RPC_SERVER"
echo "  - Kafka API: $REDPANDA_KAFKA_API"
echo "  - Pandaproxy API: $REDPANDA_PANDAPROXY_API"
echo "  - Schema Registry API: $REDPANDA_SCHEMA_REGISTRY_API"
echo "  - SMP: $REDPANDA_SMP"
echo "  - Memory: $REDPANDA_MEMORY"
echo "  - Log Level: $REDPANDA_LOG_LEVEL"

# Inicializar Redpanda
echo "üéØ Iniciando Redpanda..."

# Iniciar Redpanda em background
redpanda start &
REDPANDA_PID=$!

# Aguardar Redpanda estar pronto
echo "‚è≥ Aguardando Redpanda estar pronto..."
until rpk cluster info > /dev/null 2>&1; do
    echo "   Aguardando Redpanda..."
    sleep 2
done

echo "‚úÖ Redpanda est√° pronto!"

# Configurar autentica√ß√£o e usu√°rios automaticamente
echo "üîê Configurando autentica√ß√£o e usu√°rios..."

# Criar usu√°rios se n√£o existirem
echo "üë§ Criando usu√°rios..."

# Verificar se o usu√°rio producer existe
if ! rpk acl user list | grep -q "producer"; then
    echo "   Criando usu√°rio producer..."
    rpk acl user create producer --password ${PRODUCER_PASSWORD:-producer123}
else
    echo "   Usu√°rio producer j√° existe"
fi

# Verificar se o usu√°rio consumer existe
if ! rpk acl user list | grep -q "consumer"; then
    echo "   Criando usu√°rio consumer..."
    rpk acl user create consumer --password ${CONSUMER_PASSWORD:-consumer123}
else
    echo "   Usu√°rio consumer j√° existe"
fi

# Configurar ACLs para producer
echo "üîë Configurando permiss√µes para producer..."
rpk acl create --allow-principal User:producer --operation write --operation create --operation describe --topic "*" || true
rpk acl create --allow-principal User:producer --operation write --operation create --operation describe --group "*" || true

# Configurar ACLs para consumer
echo "üîë Configurando permiss√µes para consumer..."
rpk acl create --allow-principal User:consumer --operation read --operation describe --topic "*" || true
rpk acl create --allow-principal User:consumer --operation read --operation describe --group "*" || true

# Criar t√≥picos padr√£o se n√£o existirem
echo "üìù Criando t√≥picos padr√£o..."

if ! rpk topic list | grep -q "logins"; then
    echo "   Criando t√≥pico logins..."
    rpk topic create logins --partitions 3 --replicas 1
fi

if ! rpk topic list | grep -q "transactions"; then
    echo "   Criando t√≥pico transactions..."
    rpk topic create transactions --partitions 3 --replicas 1
fi

if ! rpk topic list | grep -q "test-topic"; then
    echo "   Criando t√≥pico test-topic..."
    rpk topic create test-topic --partitions 3 --replicas 1
fi

# Registrar schema se dispon√≠vel
if [ -f "/etc/redpanda/transactions-schema.json" ]; then
    echo "üìã Registrando schema transactions..."
    rpk registry schema create transactions --schema /etc/redpanda/transactions-schema.json || true
fi

echo "‚úÖ Configura√ß√£o autom√°tica conclu√≠da!"
echo ""
echo "üìã Usu√°rios criados:"
echo "   - producer (senha: ${PRODUCER_PASSWORD:-producer123})"
echo "   - consumer (senha: ${CONSUMER_PASSWORD:-consumer123})"
echo "   - admin (senha: ${REDPANDA_ADMIN_PASSWORD:-admin123})"
echo ""
echo "üîë Permiss√µes:"
echo "   - producer: WRITE, CREATE, DESCRIBE em todos os t√≥picos"
echo "   - consumer: READ, DESCRIBE em todos os t√≥picos"
echo "   - admin: Acesso total (superuser)"
echo ""
echo "üéâ Redpanda est√° pronto para uso!"

# Aguardar o processo principal do Redpanda
wait $REDPANDA_PID